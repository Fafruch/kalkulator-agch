// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SubjectContainer component should render 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Subject
    onChange={[Function]}
    onDelete={[Function]}
    onToggleClick={[Function]}
    store={
        Object {
            "asyncReducers": Object {},
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
    }
    subject={
        Object {
            "active": true,
            "advancedScore": 82,
            "elementaryScore": 100,
            "id": "0",
            "maxScore": Object {
              "formula": "A/B",
              "value": 182,
            },
            "name": "Matematyka",
          }
    }
    subjectNumber={0}
    subjectsType="primary"
/>,
  "nodes": Array [
    <Subject
      onChange={[Function]}
      onDelete={[Function]}
      onToggleClick={[Function]}
      store={
            Object {
                  "asyncReducers": Object {},
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                }
      }
      subject={
            Object {
                  "active": true,
                  "advancedScore": 82,
                  "elementaryScore": 100,
                  "id": "0",
                  "maxScore": Object {
                    "formula": "A/B",
                    "value": 182,
                  },
                  "name": "Matematyka",
                }
      }
      subjectNumber={0}
      subjectsType="primary"
/>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Connect(Subject)
        store={
                Object {
                        "asyncReducers": Object {},
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      }
        }
        subject={
                Object {
                        "active": true,
                        "advancedScore": 82,
                        "elementaryScore": 100,
                        "id": "0",
                        "maxScore": Object {
                          "formula": "A/B",
                          "value": 182,
                        },
                        "name": "Matematyka",
                      }
        }
        subjectNumber={0}
        subjectsType="primary"
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Connect {
        "_reactInternalInstance": [Circular],
        "context": Object {
          "store": undefined,
          "storeSubscription": undefined,
        },
        "props": Object {
          "store": Object {
            "asyncReducers": Object {},
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
          "subject": Object {
            "active": true,
            "advancedScore": 82,
            "elementaryScore": 100,
            "id": "0",
            "maxScore": Object {
              "formula": "A/B",
              "value": 182,
            },
            "name": "Matematyka",
          },
          "subjectNumber": 0,
          "subjectsType": "primary",
        },
        "propsMode": true,
        "refs": Object {},
        "renderCount": 0,
        "selector": Object {
          "error": null,
          "props": Object {
            "onChange": [Function],
            "onDelete": [Function],
            "onToggleClick": [Function],
            "store": Object {
              "asyncReducers": Object {},
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "subject": Object {
              "active": true,
              "advancedScore": 82,
              "elementaryScore": 100,
              "id": "0",
              "maxScore": Object {
                "formula": "A/B",
                "value": 182,
              },
              "name": "Matematyka",
            },
            "subjectNumber": 0,
            "subjectsType": "primary",
          },
          "run": [Function],
          "shouldComponentUpdate": false,
        },
        "setWrappedInstance": [Function],
        "state": Object {},
        "store": Object {
          "asyncReducers": Object {},
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
        "version": 0,
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Subject
          onChange={[Function]}
          onDelete={[Function]}
          onToggleClick={[Function]}
          store={
                    Object {
                              "asyncReducers": Object {},
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            }
          }
          subject={
                    Object {
                              "active": true,
                              "advancedScore": 82,
                              "elementaryScore": 100,
                              "id": "0",
                              "maxScore": Object {
                                "formula": "A/B",
                                "value": 182,
                              },
                              "name": "Matematyka",
                            }
          }
          subjectNumber={0}
          subjectsType="primary"
/>,
        "_debugID": 2,
        "_renderedOutput": <Subject
          onChange={[Function]}
          onDelete={[Function]}
          onToggleClick={[Function]}
          store={
                    Object {
                              "asyncReducers": Object {},
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            }
          }
          subject={
                    Object {
                              "active": true,
                              "advancedScore": 82,
                              "elementaryScore": 100,
                              "id": "0",
                              "maxScore": Object {
                                "formula": "A/B",
                                "value": 182,
                              },
                              "name": "Matematyka",
                            }
          }
          subjectNumber={0}
          subjectsType="primary"
/>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Connect(Subject)
    store={
        Object {
            "asyncReducers": Object {},
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
    }
    subject={
        Object {
            "active": true,
            "advancedScore": 82,
            "elementaryScore": 100,
            "id": "0",
            "maxScore": Object {
              "formula": "A/B",
              "value": 182,
            },
            "name": "Matematyka",
          }
    }
    subjectNumber={0}
    subjectsType="primary"
/>,
}
`;
