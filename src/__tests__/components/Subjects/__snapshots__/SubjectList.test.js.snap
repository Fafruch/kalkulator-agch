// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SubjectList component should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SubjectList
    subjects={
        Array [
            Object {
              "active": true,
              "advancedScore": 82,
              "elementaryScore": 100,
              "id": "0",
              "maxScore": Object {
                "formula": "A/B",
                "value": 182,
              },
              "name": "Matematyka",
            },
          ]
    }
    subjectsType="primary"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": <CSSTransitionGroup
        transitionAppear={false}
        transitionEnter={true}
        transitionEnterTimeout={300}
        transitionLeave={true}
        transitionLeaveTimeout={300}
        transitionName="subject"
>
        <li
                className="subject-active"
        >
                <Connect(Subject)
                        subject={
                                Object {
                                        "active": true,
                                        "advancedScore": 82,
                                        "elementaryScore": 100,
                                        "id": "0",
                                        "maxScore": Object {
                                          "formula": "A/B",
                                          "value": 182,
                                        },
                                        "name": "Matematyka",
                                      }
                        }
                        subjectNumber={1}
                        subjectsType="primary"
                />
        </li>
</CSSTransitionGroup>,
      "className": "list-unstyled",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <li
            className="subject-active"
>
            <Connect(Subject)
                        subject={
                                    Object {
                                                "active": true,
                                                "advancedScore": 82,
                                                "elementaryScore": 100,
                                                "id": "0",
                                                "maxScore": Object {
                                                  "formula": "A/B",
                                                  "value": 182,
                                                },
                                                "name": "Matematyka",
                                              }
                        }
                        subjectNumber={1}
                        subjectsType="primary"
            />
</li>,
        ],
        "transitionAppear": false,
        "transitionEnter": true,
        "transitionEnterTimeout": 300,
        "transitionLeave": true,
        "transitionLeaveTimeout": 300,
        "transitionName": "subject",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "host",
          "props": Object {
            "children": <Connect(Subject)
              subject={
                            Object {
                                          "active": true,
                                          "advancedScore": 82,
                                          "elementaryScore": 100,
                                          "id": "0",
                                          "maxScore": Object {
                                            "formula": "A/B",
                                            "value": 182,
                                          },
                                          "name": "Matematyka",
                                        }
              }
              subjectNumber={1}
              subjectsType="primary"
/>,
            "className": "subject-active",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "subject": Object {
                "active": true,
                "advancedScore": 82,
                "elementaryScore": 100,
                "id": "0",
                "maxScore": Object {
                  "formula": "A/B",
                  "value": 182,
                },
                "name": "Matematyka",
              },
              "subjectNumber": 1,
              "subjectsType": "primary",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "li",
        },
      ],
      "type": [Function],
    },
    "type": "ul",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": <CSSTransitionGroup
          transitionAppear={false}
          transitionEnter={true}
          transitionEnterTimeout={300}
          transitionLeave={true}
          transitionLeaveTimeout={300}
          transitionName="subject"
>
          <li
                    className="subject-active"
          >
                    <Connect(Subject)
                              subject={
                                        Object {
                                                  "active": true,
                                                  "advancedScore": 82,
                                                  "elementaryScore": 100,
                                                  "id": "0",
                                                  "maxScore": Object {
                                                    "formula": "A/B",
                                                    "value": 182,
                                                  },
                                                  "name": "Matematyka",
                                                }
                              }
                              subjectNumber={1}
                              subjectsType="primary"
                    />
          </li>
</CSSTransitionGroup>,
        "className": "list-unstyled",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <li
              className="subject-active"
>
              <Connect(Subject)
                            subject={
                                          Object {
                                                        "active": true,
                                                        "advancedScore": 82,
                                                        "elementaryScore": 100,
                                                        "id": "0",
                                                        "maxScore": Object {
                                                          "formula": "A/B",
                                                          "value": 182,
                                                        },
                                                        "name": "Matematyka",
                                                      }
                            }
                            subjectNumber={1}
                            subjectsType="primary"
              />
</li>,
          ],
          "transitionAppear": false,
          "transitionEnter": true,
          "transitionEnterTimeout": 300,
          "transitionLeave": true,
          "transitionLeaveTimeout": 300,
          "transitionName": "subject",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "host",
            "props": Object {
              "children": <Connect(Subject)
                subject={
                                Object {
                                                "active": true,
                                                "advancedScore": 82,
                                                "elementaryScore": 100,
                                                "id": "0",
                                                "maxScore": Object {
                                                  "formula": "A/B",
                                                  "value": 182,
                                                },
                                                "name": "Matematyka",
                                              }
                }
                subjectNumber={1}
                subjectsType="primary"
/>,
              "className": "subject-active",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "subject": Object {
                  "active": true,
                  "advancedScore": 82,
                  "elementaryScore": 100,
                  "id": "0",
                  "maxScore": Object {
                    "formula": "A/B",
                    "value": 182,
                  },
                  "name": "Matematyka",
                },
                "subjectNumber": 1,
                "subjectsType": "primary",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "li",
          },
        ],
        "type": [Function],
      },
      "type": "ul",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
