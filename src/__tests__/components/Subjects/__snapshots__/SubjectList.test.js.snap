// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SubjectList component should render 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <ul
    className="list-unstyled"
>
    <CSSTransitionGroup
        transitionAppear={false}
        transitionEnter={true}
        transitionEnterTimeout={300}
        transitionLeave={true}
        transitionLeaveTimeout={300}
        transitionName="subject"
    >
        <li
            className="subject-active"
        >
            <Connect(Subject)
                subject={
                    Object {
                        "active": true,
                        "advancedScore": 82,
                        "elementaryScore": 100,
                        "id": "0",
                        "maxScore": Object {
                          "formula": "A/B",
                          "value": 182,
                        },
                        "name": "Matematyka",
                      }
                }
                subjectNumber={1}
                subjectsType="primary"
            />
        </li>
    </CSSTransitionGroup>
</ul>,
  "nodes": Array [
    <ul
      className="list-unstyled"
>
      <CSSTransitionGroup
            transitionAppear={false}
            transitionEnter={true}
            transitionEnterTimeout={300}
            transitionLeave={true}
            transitionLeaveTimeout={300}
            transitionName="subject"
      >
            <li
                  className="subject-active"
            >
                  <Connect(Subject)
                        subject={
                              Object {
                                    "active": true,
                                    "advancedScore": 82,
                                    "elementaryScore": 100,
                                    "id": "0",
                                    "maxScore": Object {
                                      "formula": "A/B",
                                      "value": 182,
                                    },
                                    "name": "Matematyka",
                                  }
                        }
                        subjectNumber={1}
                        subjectsType="primary"
                  />
            </li>
      </CSSTransitionGroup>
</ul>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <SubjectList
        subjects={
                Array [
                        Object {
                          "active": true,
                          "advancedScore": 82,
                          "elementaryScore": 100,
                          "id": "0",
                          "maxScore": Object {
                            "formula": "A/B",
                            "value": 182,
                          },
                          "name": "Matematyka",
                        },
                      ]
        }
        subjectsType="primary"
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "subjects": Array [
            Object {
              "active": true,
              "advancedScore": 82,
              "elementaryScore": 100,
              "id": "0",
              "maxScore": Object {
                "formula": "A/B",
                "value": 182,
              },
              "name": "Matematyka",
            },
          ],
          "subjectsType": "primary",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <ul
          className="list-unstyled"
>
          <CSSTransitionGroup
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionEnterTimeout={300}
                    transitionLeave={true}
                    transitionLeaveTimeout={300}
                    transitionName="subject"
          >
                    <li
                              className="subject-active"
                    >
                              <Connect(Subject)
                                        subject={
                                                  Object {
                                                            "active": true,
                                                            "advancedScore": 82,
                                                            "elementaryScore": 100,
                                                            "id": "0",
                                                            "maxScore": Object {
                                                              "formula": "A/B",
                                                              "value": 182,
                                                            },
                                                            "name": "Matematyka",
                                                          }
                                        }
                                        subjectNumber={1}
                                        subjectsType="primary"
                              />
                    </li>
          </CSSTransitionGroup>
</ul>,
        "_debugID": 2,
        "_renderedOutput": <ul
          className="list-unstyled"
>
          <CSSTransitionGroup
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionEnterTimeout={300}
                    transitionLeave={true}
                    transitionLeaveTimeout={300}
                    transitionName="subject"
          >
                    <li
                              className="subject-active"
                    >
                              <Connect(Subject)
                                        subject={
                                                  Object {
                                                            "active": true,
                                                            "advancedScore": 82,
                                                            "elementaryScore": 100,
                                                            "id": "0",
                                                            "maxScore": Object {
                                                              "formula": "A/B",
                                                              "value": 182,
                                                            },
                                                            "name": "Matematyka",
                                                          }
                                        }
                                        subjectNumber={1}
                                        subjectsType="primary"
                              />
                    </li>
          </CSSTransitionGroup>
</ul>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <SubjectList
    subjects={
        Array [
            Object {
              "active": true,
              "advancedScore": 82,
              "elementaryScore": 100,
              "id": "0",
              "maxScore": Object {
                "formula": "A/B",
                "value": 182,
              },
              "name": "Matematyka",
            },
          ]
    }
    subjectsType="primary"
/>,
}
`;
