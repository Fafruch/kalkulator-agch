// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Calculator component should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Calculator
    isAnySubjectPresent={false}
    isScoreTableOpened={false}
    maxScoreWrapper={
        Object {
            "lingual": Object {
              "maxScore": Object {
                "value": 192,
              },
            },
            "primary": Object {
              "maxScore": Object {
                "value": 182,
              },
            },
          }
    }
    onToggleClick={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): null,
  Symbol(enzyme.__nodes__): Array [
    null,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Calculator component should render content when isAnySubjectPresent is true 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Calculator
    isAnySubjectPresent={true}
    isScoreTableOpened={false}
    maxScoreWrapper={
        Object {
            "lingual": Object {
              "maxScore": Object {
                "value": 192,
              },
            },
            "primary": Object {
              "maxScore": Object {
                "value": 182,
              },
            },
          }
    }
    onToggleClick={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3>
          Wynik
</h3>,
        <hr />,
        <BestSubject
          bestSubject={
                    Object {
                              "maxScore": Object {
                                "value": 182,
                              },
                            }
          }
          subjectsType="primary"
/>,
        <BestSubject
          bestSubject={
                    Object {
                              "maxScore": Object {
                                "value": 192,
                              },
                            }
          }
          subjectsType="lingual"
/>,
        <br />,
        <MaxScore
          maxLingualScore={192}
          maxPrimaryScore={182}
/>,
        <br />,
        <button
          className="btn btn-secondary"
          onClick={[Function]}
>
          Pokaż tabelę wyników
</button>,
        <CSSTransitionGroup
          transitionAppear={false}
          transitionEnter={true}
          transitionEnterTimeout={300}
          transitionLeave={true}
          transitionLeaveTimeout={300}
          transitionName="scoreTable"
/>,
      ],
      "className": "m-4",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Wynik",
        },
        "ref": null,
        "rendered": "Wynik",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "bestSubject": Object {
            "maxScore": Object {
              "value": 182,
            },
          },
          "subjectsType": "primary",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "bestSubject": Object {
            "maxScore": Object {
              "value": 192,
            },
          },
          "subjectsType": "lingual",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "maxLingualScore": 192,
          "maxPrimaryScore": 182,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Pokaż tabelę wyników",
          "className": "btn btn-secondary",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Pokaż tabelę wyników",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": false,
          "transitionAppear": false,
          "transitionEnter": true,
          "transitionEnterTimeout": 300,
          "transitionLeave": true,
          "transitionLeaveTimeout": 300,
          "transitionName": "scoreTable",
        },
        "ref": null,
        "rendered": false,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3>
            Wynik
</h3>,
          <hr />,
          <BestSubject
            bestSubject={
                        Object {
                                    "maxScore": Object {
                                      "value": 182,
                                    },
                                  }
            }
            subjectsType="primary"
/>,
          <BestSubject
            bestSubject={
                        Object {
                                    "maxScore": Object {
                                      "value": 192,
                                    },
                                  }
            }
            subjectsType="lingual"
/>,
          <br />,
          <MaxScore
            maxLingualScore={192}
            maxPrimaryScore={182}
/>,
          <br />,
          <button
            className="btn btn-secondary"
            onClick={[Function]}
>
            Pokaż tabelę wyników
</button>,
          <CSSTransitionGroup
            transitionAppear={false}
            transitionEnter={true}
            transitionEnterTimeout={300}
            transitionLeave={true}
            transitionLeaveTimeout={300}
            transitionName="scoreTable"
/>,
        ],
        "className": "m-4",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Wynik",
          },
          "ref": null,
          "rendered": "Wynik",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "bestSubject": Object {
              "maxScore": Object {
                "value": 182,
              },
            },
            "subjectsType": "primary",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "bestSubject": Object {
              "maxScore": Object {
                "value": 192,
              },
            },
            "subjectsType": "lingual",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "maxLingualScore": 192,
            "maxPrimaryScore": 182,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Pokaż tabelę wyników",
            "className": "btn btn-secondary",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Pokaż tabelę wyników",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": false,
            "transitionAppear": false,
            "transitionEnter": true,
            "transitionEnterTimeout": 300,
            "transitionLeave": true,
            "transitionLeaveTimeout": 300,
            "transitionName": "scoreTable",
          },
          "ref": null,
          "rendered": false,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Calculator component should render the scoreTable when isScoreTableOpened is true 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Calculator
    isAnySubjectPresent={true}
    isScoreTableOpened={true}
    maxScoreWrapper={
        Object {
            "lingual": Object {
              "maxScore": Object {
                "value": 192,
              },
            },
            "primary": Object {
              "maxScore": Object {
                "value": 182,
              },
            },
          }
    }
    onToggleClick={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3>
          Wynik
</h3>,
        <hr />,
        <BestSubject
          bestSubject={
                    Object {
                              "maxScore": Object {
                                "value": 182,
                              },
                            }
          }
          subjectsType="primary"
/>,
        <BestSubject
          bestSubject={
                    Object {
                              "maxScore": Object {
                                "value": 192,
                              },
                            }
          }
          subjectsType="lingual"
/>,
        <br />,
        <MaxScore
          maxLingualScore={192}
          maxPrimaryScore={182}
/>,
        <br />,
        <button
          className="btn btn-secondary"
          onClick={[Function]}
>
          Ukryj tabelę wyników
</button>,
        <CSSTransitionGroup
          transitionAppear={false}
          transitionEnter={true}
          transitionEnterTimeout={300}
          transitionLeave={true}
          transitionLeaveTimeout={300}
          transitionName="scoreTable"
>
          <Connect(ScoreTable) />
</CSSTransitionGroup>,
      ],
      "className": "m-4",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Wynik",
        },
        "ref": null,
        "rendered": "Wynik",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "bestSubject": Object {
            "maxScore": Object {
              "value": 182,
            },
          },
          "subjectsType": "primary",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "bestSubject": Object {
            "maxScore": Object {
              "value": 192,
            },
          },
          "subjectsType": "lingual",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "maxLingualScore": 192,
          "maxPrimaryScore": 182,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Ukryj tabelę wyników",
          "className": "btn btn-secondary",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Ukryj tabelę wyników",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": <Connect(ScoreTable) />,
          "transitionAppear": false,
          "transitionEnter": true,
          "transitionEnterTimeout": 300,
          "transitionLeave": true,
          "transitionLeaveTimeout": 300,
          "transitionName": "scoreTable",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3>
            Wynik
</h3>,
          <hr />,
          <BestSubject
            bestSubject={
                        Object {
                                    "maxScore": Object {
                                      "value": 182,
                                    },
                                  }
            }
            subjectsType="primary"
/>,
          <BestSubject
            bestSubject={
                        Object {
                                    "maxScore": Object {
                                      "value": 192,
                                    },
                                  }
            }
            subjectsType="lingual"
/>,
          <br />,
          <MaxScore
            maxLingualScore={192}
            maxPrimaryScore={182}
/>,
          <br />,
          <button
            className="btn btn-secondary"
            onClick={[Function]}
>
            Ukryj tabelę wyników
</button>,
          <CSSTransitionGroup
            transitionAppear={false}
            transitionEnter={true}
            transitionEnterTimeout={300}
            transitionLeave={true}
            transitionLeaveTimeout={300}
            transitionName="scoreTable"
>
            <Connect(ScoreTable) />
</CSSTransitionGroup>,
        ],
        "className": "m-4",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Wynik",
          },
          "ref": null,
          "rendered": "Wynik",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "bestSubject": Object {
              "maxScore": Object {
                "value": 182,
              },
            },
            "subjectsType": "primary",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "bestSubject": Object {
              "maxScore": Object {
                "value": 192,
              },
            },
            "subjectsType": "lingual",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "maxLingualScore": 192,
            "maxPrimaryScore": 182,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Ukryj tabelę wyników",
            "className": "btn btn-secondary",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Ukryj tabelę wyników",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Connect(ScoreTable) />,
            "transitionAppear": false,
            "transitionEnter": true,
            "transitionEnterTimeout": 300,
            "transitionLeave": true,
            "transitionLeaveTimeout": 300,
            "transitionName": "scoreTable",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
