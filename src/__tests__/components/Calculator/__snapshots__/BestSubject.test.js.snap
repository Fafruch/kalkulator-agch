// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BestSubject component should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BestSubject
    bestSubject={
        Object {
            "maxScore": Object {
              "formula": "",
              "value": 0,
            },
            "name": "",
          }
    }
    subjectsType="primary"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": <p>
        Maksymalny wynik dla 
        przedmiotu głównego
         to  
        <b />
         pkt. dla przedmiotu  
        <b>
                bez nazwy
        </b>
         obliczony zgodnie z formułą  
        
        .
</p>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "Maksymalny wynik dla ",
          "przedmiotu głównego",
          " to  ",
          <b />,
          " pkt. dla przedmiotu  ",
          <b>
            bez nazwy
</b>,
          " obliczony zgodnie z formułą  ",
          "",
          ".",
        ],
      },
      "ref": null,
      "rendered": Array [
        "Maksymalny wynik dla ",
        "przedmiotu głównego",
        " to  ",
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": 0,
          },
          "ref": null,
          "rendered": 0,
          "type": "b",
        },
        " pkt. dla przedmiotu  ",
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "bez nazwy",
          },
          "ref": null,
          "rendered": "bez nazwy",
          "type": "b",
        },
        " obliczony zgodnie z formułą  ",
        "",
        ".",
      ],
      "type": "p",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": <p>
          Maksymalny wynik dla 
          przedmiotu głównego
           to  
          <b />
           pkt. dla przedmiotu  
          <b>
                    bez nazwy
          </b>
           obliczony zgodnie z formułą  
          
          .
</p>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Maksymalny wynik dla ",
            "przedmiotu głównego",
            " to  ",
            <b />,
            " pkt. dla przedmiotu  ",
            <b>
              bez nazwy
</b>,
            " obliczony zgodnie z formułą  ",
            "",
            ".",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Maksymalny wynik dla ",
          "przedmiotu głównego",
          " to  ",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": 0,
            },
            "ref": null,
            "rendered": 0,
            "type": "b",
          },
          " pkt. dla przedmiotu  ",
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "bez nazwy",
            },
            "ref": null,
            "rendered": "bez nazwy",
            "type": "b",
          },
          " obliczony zgodnie z formułą  ",
          "",
          ".",
        ],
        "type": "p",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
