// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ScoreRangeInput component should render 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <input
    className="subject-input-range"
    max="100"
    min="0"
    onChange={[Function]}
    type="range"
    value={100}
/>,
  "nodes": Array [
    <input
      className="subject-input-range"
      max="100"
      min="0"
      onChange={[Function]}
      type="range"
      value={100}
/>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <ScoreRangeInput
        examType="elementary"
        onChange={[Function]}
        subject={
                Object {
                        "active": true,
                        "advancedScore": 82,
                        "elementaryScore": 100,
                        "id": "0",
                      }
        }
        subjectsType="primary"
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "examType": "elementary",
          "onChange": [Function],
          "subject": Object {
            "active": true,
            "advancedScore": 82,
            "elementaryScore": 100,
            "id": "0",
          },
          "subjectsType": "primary",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <input
          className="subject-input-range"
          max="100"
          min="0"
          onChange={[Function]}
          type="range"
          value={100}
/>,
        "_debugID": 2,
        "_renderedOutput": <input
          className="subject-input-range"
          max="100"
          min="0"
          onChange={[Function]}
          type="range"
          value={100}
/>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ScoreRangeInput
    examType="elementary"
    onChange={[Function]}
    subject={
        Object {
            "active": true,
            "advancedScore": 82,
            "elementaryScore": 100,
            "id": "0",
          }
    }
    subjectsType="primary"
/>,
}
`;
